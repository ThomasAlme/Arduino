#include <SoftwareSerial.h>
#include <WiFiEsp.h>

SoftwareSerial wifi_modul(6, 7);
WiFiEspServer server(8090);

const char ssid[] = "SkoleNett";
const char passord[] = "SkoleNett123";

const int LED = 10;
const int LED_OTHER = 11;

// Brukervennlig hjørne

void enablePins() {
  pinMode(LED, OUTPUT);
  pinMode(LED_OTHER, OUTPUT);
}


// Denne funksjonen kjører når serveren får melding
void messageReceived(WiFiEspClient client, String melding) {
  IPAddress ip = client.remoteIP();
  int MY_LED = 0;

  if (ipToString(ip) == "192.168.1.200") {
    MY_LED = LED;
  } else {
    MY_LED = LED_OTHER;
  }
  
  if (melding == "lys_på") {
      digitalWrite(MY_LED, HIGH);

  } else if (melding == "lys_av") {
      digitalWrite(MY_LED, LOW);
      
  } else if (melding == "lys_toggle") {
      digitalWrite(MY_LED, !digitalRead(MY_LED));
  }
}

// Selve programmet

int unstuck = 0;
int wifi_status = WL_IDLE_STATUS;

// Bruk denne funksjonen til å sende melding. Ikke bruk '\r' i meldingene.
void sendMessage(WiFiEspClient client, String melding) {
  client.print(melding);
  client.print("\r");
  delay(20);
}

String getMessage(WiFiEspClient client) {
  String melding = "";
  unstuck = 0;
  
  while (client.connected()) {
    unstuck++;
    if (unstuck > 30) {
        break;
      }
    if (client.available()) {
      unstuck--;
      char c = client.read();
      if (c == '\r') {
        Serial.print("Fikk melding: ");
        Serial.println(melding);
        break;
      } else {
        melding += c;
      }
    }
  }

  return melding;
}


void setup() {
  Serial.begin(115200);
  Serial.println("Starter WiFiRemote server...");
  
  wifi_modul.begin(9600);

  enablePins();
  
  // WiFi starter opp
  WiFi.init(&wifi_modul);

  if (WiFi.status() == WL_NO_SHIELD) {
    Serial.println("WiFi modul ikke tilkoblet");
    while(true); // Stopp programmet.
  }

  while (wifi_status != WL_CONNECTED) {
    Serial.print("Prøver å koble til trådløst nettverk: ");
    Serial.println(ssid);

    wifi_status = WiFi.begin(ssid, passord);
  }

  Serial.println("Koblet til nettverket!");
  printWiFiStatus();

  server.begin();
  Serial.println("WiFiRemote server er operativ!\n");
}

void loop() {
  WiFiEspClient client = server.available();

  if (client) {
    Serial.print("Ny tilkobling fra '");
    Serial.print(client.remoteIP());
    Serial.println("'!");

    String melding = getMessage(client);
    messageReceived(client, melding);
    
    delay(10);
    sendMessage(client, melding);

    /*
     
    melding = getMessage(client);

    if (melding != "OK") {
      delay(1000);
    }

    */
    
    client.stop();
    Serial.println("Klient koblet fra\n");
  }
}

void printWiFiStatus() {
  Serial.print("SSID: ");
  Serial.println(WiFi.SSID());

  IPAddress ip = WiFi.localIP();
  Serial.print("IP Adresse: ");
  Serial.println(ip);

  long rssi = WiFi.RSSI();
  Serial.print("Signal styrke (RSSI): ");
  Serial.print(rssi);
  Serial.println("dBm");
}

String ipToString(IPAddress ip) {
  String s = "";
  for (int i = 0; i < 4; i++) {
    s += i ? "." + String(ip[i]) : String(ip[i]);
  }
  return s;
}
